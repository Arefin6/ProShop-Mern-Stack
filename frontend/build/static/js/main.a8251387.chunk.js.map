{"version":3,"sources":["constains/productConstains.js","constains/cartConstains.js","constains/orderConstains.js","constains/userConstains.js","store.js","reducers/productReducers.js","reducers/cartReducer.js","reducers/userReducers.js","reducers/orderReducer.js","components/Footer/Footer.js","actions/userActions.js","components/SearchBox/SearchBox.js","components/Header/Header.js","actions/productActions.js","components/Rating/Rating.js","components/Products/Product.js","Loader/Loader.js","components/Message/Message.js","components/Paginate/Paginate.js","components/ProductCarosel/ProductCarosel.js","components/Meta.js","components/screens/HomeScreen/Home.js","components/screens/ProsuctScreen/ProductScreen.js","actions/cartActions.js","components/screens/CartScreen/CartScreen.js","components/FormContainer/FormContainer.js","components/screens/LoginScreen/LoginScreen.js","components/screens/RegisterScreen/RegisterScreen.js","components/screens/ProfileScreen/ProfileScreen.js","actions/orderAction.js","components/CheckoutSteps/CheckoutSteps.js","components/screens/Shiping Screen/ShipingScreen.js","components/screens/PaymentScreen/PaymentScreen.js","components/screens/PlaceOrderScreen/PlaceOrderScreen.js","components/screens/OrderScreen/OrderScreen.js","components/screens/UserListScreen/UserListScreen.js","components/screens/UserEditScreen/UserEditScreen.js","components/screens/ProductListScreen/ProductListScreen.js","components/screens/ProductEditScreen/ProductEditScreen.js","components/screens/OrderListScreen/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_MY_LIST_REQUEST","ORDER_MY_LIST_SUCCESS","ORDER_MY_LIST_FAIL","ORDER_MY_LIST_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existsItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","orderCreate","order","orderDetails","orderItems","orderPay","orderDelivered","orderMyList","orders","orderList","userList","users","userDelete","userUpdate","cartItemFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","placeholder","onChange","target","value","Button","variant","Header","useDispatch","useSelector","handleLogout","removeItem","document","location","href","Navbar","bg","Brand","render","Nav","Link","NavDropdown","title","to","Item","onClick","isAdmin","listProducts","pageNumber","listProductDetails","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Paginate","Pagination","Array","keys","active","ProductCarosel","useEffect","Carousel","pause","Image","alt","Caption","Meta","Helmet","Home","useParams","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorReviewCreate","successReviewCreate","alert","fluid","ListGroup","description","countInStock","ListGroupItem","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","subString","CheckoutSteps","step1","step2","step3","step4","ShipingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","createOrder","fontWeight","index","OrderScreen","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","getOrderDetails","window","paypal","amount","onSuccess","paymentResult","console","log","orderId","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingCreate","errorCreate","successCreate","createdProduct","loadingDelete","errorDelete","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","handleFileUpload","file","files","formData","FormData","append","updateProduct","File","OrderListScreen","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a8251387.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_MY_LIST_REQUEST = 'ORDER_MY_LIST_REQUEST'\r\nexport const ORDER_MY_LIST_SUCCESS = 'ORDER_MY_LIST_SUCCESS'\r\nexport const ORDER_MY_LIST_FAIL = 'ORDER_MY_LIST_FAIL'\r\nexport const ORDER_MY_LIST_RESET = 'ORDER_MY_LIST_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\n\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';","import {createStore,combineReducers,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {productListReducer,productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productCreateReviewReducer, productTopRatedReducer} from './reducers/productReducers'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { cartItemReducer } from './reducers/cartReducer'\r\nimport { myOrderListReducer, orderCreateReducer, orderDeliveredReducer, orderDetailsReducer, orderListReducer, orderPayReducer } from './reducers/orderReducer'\r\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userProfileUpdateReducer, userRegisterReducer, userUpdateReducer } from './reducers/userReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList:productListReducer,\r\n  productDetails:productDetailsReducer,\r\n  productDelete:productDeleteReducer,\r\n  productCreate:productCreateReducer,\r\n  productUpdate:productUpdateReducer,\r\n  productReviewCreate:productCreateReviewReducer,\r\n  productTopRated:productTopRatedReducer,\r\n  cart:cartItemReducer,\r\n  userLogin:userLoginReducer,\r\n  userRegister:userRegisterReducer,\r\n  userDetails:userDetailsReducer,\r\n  userUpdateProfile:userProfileUpdateReducer,\r\n  orderCreate:orderCreateReducer,\r\n  orderDetails:orderDetailsReducer,\r\n  orderPay:orderPayReducer,\r\n  orderDelivered:orderDeliveredReducer,\r\n  orderMyList:myOrderListReducer,\r\n  orderList:orderListReducer,\r\n  userList:userListReducer,\r\n  userDelete:userDeleteReducer,\r\n  userUpdate:userUpdateReducer\r\n})\r\n\r\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')):[]\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')):null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')):{}\r\n\r\nconst initialState = {\r\n  cart:{cartItems:cartItemFromStorage,\r\n   shippingAddress:shippingAddressFromStorage\r\n  },\r\n  userLogin:{userInfo:userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    \r\n)\r\n\r\nexport default store","import {\r\n   PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS ,PRODUCT_LIST_FAIL, \r\n   PRODUCT_DETAILS_REQUEST,\r\n   PRODUCT_DETAILS_SUCCESS,\r\n   PRODUCT_DETAILS_FAIL,\r\n   PRODUCT_DELETE_REQUEST,\r\n   PRODUCT_DELETE_SUCCESS,\r\n   PRODUCT_DELETE_FAIL,\r\n   PRODUCT_CREATE_RESET,\r\n   PRODUCT_CREATE_REQUEST,\r\n   PRODUCT_CREATE_SUCCESS,\r\n   PRODUCT_CREATE_FAIL,\r\n   PRODUCT_UPDATE_REQUEST,\r\n   PRODUCT_UPDATE_SUCCESS,\r\n   PRODUCT_UPDATE_FAIL,\r\n   PRODUCT_UPDATE_RESET,\r\n   PRODUCT_CREATE_REVIEW_REQUEST,\r\n   PRODUCT_CREATE_REVIEW_SUCCESS,\r\n   PRODUCT_CREATE_REVIEW_FAIL,\r\n   PRODUCT_CREATE_REVIEW_RESET,\r\n   PRODUCT_TOP_REQUEST,\r\n   PRODUCT_TOP_SUCCESS,\r\n   PRODUCT_TOP_FAIL,\r\n} from '../constains/productConstains'\r\n\r\nexport const productListReducer = (state= {products:[]},action) =>{\r\n   \r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n           return {loading:true,products:[]}\r\n        case PRODUCT_LIST_SUCCESS:\r\n           return {loading:false,\r\n            products:action.payload.products,\r\n            pages:action.payload.pages,\r\n            page:action.payload.page\r\n         \r\n         }\r\n        case PRODUCT_LIST_FAIL:\r\n          return {loading:false,error:action.payload}\r\n        default:\r\n          return state            \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state= {product: { reviews: [] }},action) =>{\r\n   \r\n   switch(action.type){\r\n       case PRODUCT_DETAILS_REQUEST:\r\n          return {loading:true, ...state}\r\n       case PRODUCT_DETAILS_SUCCESS:\r\n          return {loading:false,product:action.payload}\r\n       case PRODUCT_DETAILS_FAIL:\r\n         return {loading:false,error:action.payload}\r\n       default:\r\n         return state            \r\n   }\r\n\r\n}\r\n\r\nexport const productDeleteReducer = (state= {},action) =>{\r\n   \r\n   switch(action.type){\r\n       case PRODUCT_DELETE_REQUEST:\r\n          return {loading:true}\r\n       case PRODUCT_DELETE_SUCCESS:\r\n          return {loading:false,success:true}\r\n       case PRODUCT_DELETE_FAIL:\r\n         return {loading:false,error:action.payload}\r\n       default:\r\n         return state            \r\n   }\r\n\r\n}\r\n//Product Create\r\n\r\nexport const productCreateReducer = (state= {},action) =>{\r\n   \r\n   switch(action.type){\r\n       case PRODUCT_CREATE_REQUEST:\r\n          return {loading:true}\r\n       case PRODUCT_CREATE_SUCCESS:\r\n          return {loading:false,success:true,product:action.payload}\r\n       case PRODUCT_CREATE_FAIL:\r\n         return {loading:false,error:action.payload}\r\n       case PRODUCT_CREATE_RESET:\r\n         return {} \r\n       default:\r\n         return state            \r\n   }\r\n\r\n}\r\n\r\nexport const productUpdateReducer = (state= {product:{}},action) =>{\r\n   \r\n   switch(action.type){\r\n       case PRODUCT_UPDATE_REQUEST:\r\n          return {loading:true}\r\n       case PRODUCT_UPDATE_SUCCESS:\r\n          return {loading:false,success:true,product:action.payload}\r\n       case PRODUCT_UPDATE_FAIL:\r\n         return {loading:false,error:action.payload}\r\n       case PRODUCT_UPDATE_RESET:\r\n         return {product:{}} \r\n       default:\r\n         return state            \r\n   }\r\n\r\n}\r\n\r\n//Review Create\r\n\r\nexport const productCreateReviewReducer = (state= {},action) =>{\r\n   \r\n   switch(action.type){\r\n       case PRODUCT_CREATE_REVIEW_REQUEST:\r\n          return {loading:true}\r\n       case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n          return {loading:false,success:true}\r\n       case PRODUCT_CREATE_REVIEW_FAIL:\r\n         return {loading:false,error:action.payload}\r\n       case PRODUCT_CREATE_REVIEW_RESET:\r\n         return {} \r\n       default:\r\n         return state            \r\n   }\r\n\r\n}\r\n\r\n//get Top Products\r\n\r\nexport const productTopRatedReducer = (state= {products:[]},action) =>{\r\n   \r\n   switch(action.type){\r\n       case PRODUCT_TOP_REQUEST:\r\n          return {loading:true,products:[]}\r\n       case PRODUCT_TOP_SUCCESS:\r\n          return {loading:false,products:action.payload}\r\n       case PRODUCT_TOP_FAIL:\r\n         return {loading:false,error:action.payload}\r\n       default:\r\n         return state            \r\n   }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { CART_ADD_ITEM,CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS  } from \"../constains/cartConstains\"\r\n\r\nexport const cartItemReducer = (state = {cartItems:[],shippingAddress:{}},action)=>{\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n           const item = action.payload\r\n           \r\n           const existsItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n           if (existsItem) {\r\n               return {\r\n                   ...state,\r\n                   cartItems:state.cartItems.map(x => x.product === existsItem.product ? item :x)\r\n               }\r\n           } else {\r\n               return{\r\n                   ...state,\r\n                   cartItems:[...state.cartItems,item]\r\n               }\r\n           } \r\n         case CART_REMOVE_ITEM: \r\n           return{\r\n               ...state,\r\n               cartItems:state.cartItems.filter(x =>x.product !== action.payload)\r\n           }\r\n           case CART_SAVE_SHIPPING_ADDRESS: \r\n           return{\r\n               ...state,\r\n               shippingAddress:action.payload\r\n           } \r\n           case CART_SAVE_PAYMENT_METHOD: \r\n           return{\r\n               ...state,\r\n               paymentMethod:action.payload\r\n           }   \r\n        default:\r\n         return state   \r\n    }\r\n}","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, \r\n   USER_DETAILS_REQUEST, \r\n   USER_DETAILS_RESET, \r\n   USER_DETAILS_SUCCESS, USER_LIST_FAIL,\r\n   USER_LIST_REQUEST, USER_LIST_RESET, \r\n   USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST,\r\n   USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, \r\n   USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, \r\n   USER_UPDATE_FAIL, \r\n   USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, \r\n   USER_UPDATE_PROFILE_SUCCESS, \r\n   USER_UPDATE_REQUEST,\r\n   USER_UPDATE_RESET,\r\n   USER_UPDATE_SUCCESS} from \"../constains/userConstains\"\r\n\r\nexport const userLoginReducer = (state= {},action) =>{\r\n   \r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n           return {loading:true,}\r\n        case USER_LOGIN_SUCCESS:\r\n           return {loading:false,userInfo:action.payload}\r\n        case USER_LOGIN_FAIL:\r\n          return {loading:false,error:action.payload}\r\n\r\n        case USER_LOGOUT:\r\n           return {}   \r\n        default:\r\n          return state            \r\n    }\r\n\r\n}\r\n\r\nexport const userRegisterReducer = (state= {},action) =>{\r\n   \r\n   switch(action.type){\r\n       case USER_REGISTER_REQUEST:\r\n          return {loading:true,}\r\n       case USER_REGISTER_SUCCESS:\r\n          return {loading:false,userInfo:action.payload}\r\n       case USER_REGISTER_FAIL:\r\n         return {loading:false,error:action.payload}\r\n       default:\r\n         return state            \r\n   }\r\n\r\n}\r\n//User Details Reducer\r\n\r\nexport const userDetailsReducer = (state= {user:{}},action) =>{\r\n   \r\n   switch(action.type){\r\n       case USER_DETAILS_REQUEST:\r\n          return {...state,loading:true,}\r\n       case USER_DETAILS_SUCCESS:\r\n          return {loading:false,user:action.payload}\r\n       case USER_DETAILS_FAIL:\r\n         return {loading:false,error:action.payload}\r\n       case USER_DETAILS_RESET:\r\n          return {user:{}}  \r\n       default:\r\n         return state            \r\n   }\r\n\r\n}\r\n\r\n//Update Profile Reducer\r\n\r\nexport const userProfileUpdateReducer = (state= {},action) =>{\r\n   \r\n   switch(action.type){\r\n       case USER_UPDATE_PROFILE_REQUEST:\r\n          return {loading:true,}\r\n       case USER_UPDATE_PROFILE_SUCCESS:\r\n          return {loading:false,success:true,userInfo:action.payload}\r\n       case USER_UPDATE_PROFILE_FAIL:\r\n         return {loading:false,error:action.payload}\r\n       default:\r\n         return state            \r\n   }\r\n\r\n}\r\n\r\n//get User For admin\r\n\r\nexport const userListReducer = (state= {users:[]},action) =>{\r\n   \r\n   switch(action.type){\r\n\r\n       case USER_LIST_REQUEST:\r\n          return {loading:true}\r\n\r\n       case USER_LIST_SUCCESS:\r\n          return {loading:false,users:action.payload}\r\n\r\n       case USER_LIST_FAIL:\r\n         return {loading:false,error:action.payload}\r\n        case USER_LIST_RESET:\r\n         return {users:[]}   \r\n       default:\r\n         return state            \r\n   }\r\n\r\n}\r\n\r\n//Delete User\r\n\r\nexport const userDeleteReducer = (state= {},action) =>{\r\n   \r\n   switch(action.type){\r\n\r\n       case USER_DELETE_REQUEST:\r\n          return {loading:true}\r\n\r\n       case USER_DELETE_SUCCESS:\r\n          return {loading:false,success:true}\r\n\r\n       case USER_DELETE_FAIL:\r\n         return {loading:false,error:action.payload}\r\n    \r\n       default:\r\n         return state            \r\n   }\r\n\r\n}\r\n\r\n//user Update Reducer\r\n\r\nexport const userUpdateReducer = (state= {user:{}},action) =>{\r\n   \r\n   switch(action.type){\r\n\r\n       case USER_UPDATE_REQUEST:\r\n          return {loading:true}\r\n\r\n       case USER_UPDATE_SUCCESS:\r\n          return {loading:false,success:true}\r\n\r\n       case USER_UPDATE_FAIL:\r\n         return {loading:false,error:action.payload}\r\n       case USER_UPDATE_RESET:\r\n          return {user:{}}\r\n       default:\r\n         return state            \r\n   }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_MY_LIST_REQUEST,\r\n    ORDER_MY_LIST_SUCCESS,\r\n    ORDER_MY_LIST_FAIL,\r\n    ORDER_MY_LIST_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from '../constains/orderConstains.js'\r\n\r\nexport const orderCreateReducer = (state = {},action) =>{\r\n    \r\n    switch(action.type){\r\n      case ORDER_CREATE_REQUEST: \r\n       return{\r\n           loading:true\r\n       }\r\n       case ORDER_CREATE_SUCCESS:\r\n          return{\r\n            loading:false,\r\n            success:true,\r\n            order:action.payload\r\n          }\r\n       case ORDER_CREATE_FAIL:\r\n           return{\r\n               loading:false,\r\n               error:action.payload\r\n           }    \r\n     default:\r\n      return state    \r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading:true,orderItems:[],shippingAddress:{}},action) =>{\r\n    \r\n    switch(action.type){\r\n      case ORDER_DETAILS_REQUEST: \r\n       return{\r\n           ...state,\r\n           loading:true\r\n       }\r\n       case ORDER_DETAILS_SUCCESS:\r\n          return{\r\n            loading:false,\r\n            order:action.payload\r\n          }\r\n       case ORDER_DETAILS_FAIL:\r\n           return{\r\n               loading:false,\r\n               error:action.payload\r\n           }    \r\n     default:\r\n      return state    \r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {},action) =>{\r\n    \r\n  switch(action.type){\r\n    case ORDER_PAY_REQUEST: \r\n     return{\r\n         loading:true\r\n     }\r\n     case ORDER_PAY_SUCCESS:\r\n        return{\r\n          loading:false,\r\n          success:true\r\n        }\r\n     case ORDER_PAY_FAIL:\r\n         return{\r\n             loading:false,\r\n             error:action.payload\r\n         } \r\n      case ORDER_PAY_RESET:\r\n          return{\r\n          }        \r\n   default:\r\n    return state    \r\n  }\r\n}\r\n  export const myOrderListReducer = (state = {orders:[]},action) =>{\r\n    \r\n    switch(action.type){\r\n      case ORDER_MY_LIST_REQUEST: \r\n       return{\r\n           loading:true\r\n       }\r\n       case ORDER_MY_LIST_SUCCESS:\r\n          return{\r\n            loading:false,\r\n            orders:action.payload\r\n          }\r\n       case ORDER_MY_LIST_FAIL:\r\n           return{\r\n               loading:false,\r\n               error:action.payload\r\n           }\r\n        case ORDER_MY_LIST_RESET:\r\n         return{\r\n          orders:[]\r\n         }          \r\n     default:\r\n      return state    \r\n    }\r\n  }\r\n\r\n  export const orderListReducer = (state = {orders:[]},action) =>{\r\n    \r\n    switch(action.type){\r\n      case ORDER_LIST_REQUEST: \r\n       return{\r\n           loading:true\r\n       }\r\n       case ORDER_LIST_SUCCESS:\r\n          return{\r\n            loading:false,\r\n            orders:action.payload\r\n          }\r\n       case ORDER_LIST_FAIL:\r\n           return{\r\n               loading:false,\r\n               error:action.payload\r\n           }  \r\n     default:\r\n      return state    \r\n    }\r\n  } \r\n\r\n //order Deliver Reducer\r\n\r\n  export const orderDeliveredReducer = (state = {},action) =>{\r\n    \r\n    switch(action.type){\r\n      case ORDER_DELIVER_REQUEST: \r\n       return{\r\n           loading:true\r\n       }\r\n       case ORDER_DELIVER_SUCCESS:\r\n          return{\r\n            loading:false,\r\n            success:true\r\n          }\r\n       case ORDER_DELIVER_FAIL:\r\n           return{\r\n               loading:false,\r\n               error:action.payload\r\n           } \r\n        case ORDER_DELIVER_RESET:\r\n            return{\r\n            }        \r\n     default:\r\n      return state    \r\n    }\r\n  }","import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n           <Container>\r\n               <Row>\r\n                  <Col className=\"text-center py-3\">\r\n                   Copyright &copy; ProShop \r\n                  </Col> \r\n               </Row>\r\n           </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import axios from 'axios'\r\nimport { ORDER_MY_LIST_RESET } from '../constains/orderConstains'\r\nimport {\r\n    \r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\nUSER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_RESET,\r\n    USER_LIST_SUCCESS,\r\n USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, \r\n USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, \r\n USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, \r\n USER_UPDATE_PROFILE_REQUEST, \r\n USER_UPDATE_PROFILE_SUCCESS, \r\n USER_UPDATE_REQUEST, \r\n USER_UPDATE_SUCCESS} from '../constains/userConstains'\r\n\r\nexport const login = (email,password) =>async(dispatch)=>{\r\n    try {\r\n       dispatch({\r\n           type:USER_LOGIN_REQUEST\r\n       }) \r\n     \r\n       const config = {\r\n           headers:{\r\n               'Content-type':'application/json'\r\n           }\r\n       }\r\n\r\n       const {data} = await axios.post('/api/user/login',\r\n           {email,password},\r\n           config\r\n       ) \r\n       \r\n       dispatch({\r\n           type:USER_LOGIN_SUCCESS,\r\n           payload:data\r\n       })\r\n       localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n\r\nexport const logout =() =>(dispatch)=>{\r\n    localStorage.removeItem('userInfo'); \r\n    \r\n    dispatch({\r\n      type:USER_LOGOUT   \r\n     })\r\n     dispatch({\r\n        type:USER_DETAILS_RESET\r\n        \r\n     })\r\n     dispatch({\r\n        type:ORDER_MY_LIST_RESET \r\n     })\r\n     dispatch({\r\n         type:USER_LIST_RESET\r\n     })\r\n     document.location.href = '/login'\r\n}\r\n\r\n//user get Details\r\n\r\nexport const getUserDetails = (id) =>async(dispatch,getState)=>{\r\n    try {\r\n       dispatch({\r\n           type:USER_DETAILS_REQUEST\r\n       }) \r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n               'Content-type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const {data} = await axios.get(`/api/user/${id}`,\r\n           config\r\n       ) \r\n       \r\n       dispatch({\r\n        type:USER_DETAILS_SUCCESS,\r\n        payload:data\r\n    })\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n\r\n//get All User Action\r\nexport const listUsers = () =>async(dispatch,getState)=>{\r\n    try {\r\n       dispatch({\r\n           type:USER_LIST_REQUEST\r\n       }) \r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const {data} = await axios.get(`/api/user`,\r\n           config\r\n       ) \r\n       \r\n       dispatch({\r\n        type:USER_LIST_SUCCESS,\r\n        payload:data\r\n    })\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_LIST_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n\r\n\r\n\r\n//User Register\r\nexport const register = (name,email,password) =>async(dispatch,getState)=>{\r\n    try {\r\n       dispatch({\r\n           type:USER_REGISTER_REQUEST\r\n       }) \r\n     \r\n       const config = {\r\n           headers:{\r\n               'Content-type':'application/json'\r\n           }\r\n       }\r\n\r\n       const {data} = await axios.post('/api/user',\r\n           {name,email,password},\r\n           config\r\n       ) \r\n       \r\n       dispatch({\r\n        type:USER_REGISTER_SUCCESS,\r\n        payload:data\r\n    })\r\n\r\n       dispatch({\r\n           type:USER_LOGIN_SUCCESS,\r\n           payload:data\r\n       })\r\n       localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n\r\n\r\n//update Profile\r\n\r\nexport const updateUserProfile = (user) =>async(dispatch,getState)=>{\r\n    try {\r\n       dispatch({\r\n           type:USER_UPDATE_PROFILE_REQUEST\r\n       }) \r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n               'Content-type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const {data} = await axios.put(`/api/user/profile`,user,\r\n           config\r\n       ) \r\n       \r\n       dispatch({\r\n        type:USER_UPDATE_PROFILE_SUCCESS,\r\n        payload:data\r\n    })\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n\r\n//Delete User\r\n\r\nexport const deleteUser = (id) =>async(dispatch,getState)=>{\r\n    try {\r\n       dispatch({\r\n           type:USER_DELETE_REQUEST\r\n       }) \r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n                \r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n      await axios.delete(`/api/user/${id}`,\r\n           config\r\n       ) \r\n       \r\n       dispatch({\r\n        type:USER_DELETE_SUCCESS\r\n    })\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_DELETE_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n\r\n//update User\r\n\r\n\r\nexport const updateUser = (user) =>async(dispatch,getState)=>{\r\n    try {\r\n       dispatch({\r\n           type:USER_UPDATE_REQUEST\r\n       }) \r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const{data} =  await axios.put(`/api/user/${user._id}`,user,\r\n           config\r\n       ) \r\n       \r\n       dispatch({\r\n        type:USER_UPDATE_SUCCESS\r\n    })\r\n    dispatch({\r\n        type:USER_DETAILS_SUCCESS,\r\n        payload:data\r\n    })\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_UPDATE_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n","import React,{ useState } from 'react';\r\nimport {Form,Button} from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst SearchBox = () => {\r\n    const [keyword,setKeyword] = useState('')\r\n     const history = useHistory()\r\n\r\n    const searchHandler = (e) =>\r\n    {\r\n      e.preventDefault()\r\n       if(keyword.trim()){\r\n         history.push(`/search/${keyword}`) \r\n       }\r\n       else{\r\n         history.push('/')\r\n        } \r\n    }\r\n    \r\n\r\n    return (\r\n       <Form onSubmit={searchHandler} inline>\r\n        <Form.Control\r\n        type='text'\r\n        name='q'\r\n        placeholder='Search Products...'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        className='mr-sm-2 ml-sm-5'\r\n        >\r\n            \r\n        </Form.Control> \r\n         <Button type='submit' variant='outline-success' className='p-2'>\r\n             Search\r\n         </Button>\r\n       </Form>\r\n    );\r\n};\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Route } from 'react-router-dom';\r\nimport { logout } from '../../actions/userActions';\r\nimport SearchBox from '../SearchBox/SearchBox';\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLoggedIn = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLoggedIn\r\n    \r\n    const handleLogout = () =>{\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n    <header>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n            <Navbar.Brand href=\"/\">ProShop</Navbar.Brand>\r\n              \r\n             <Route render={({history}) => <SearchBox history={history} />}   />  \r\n            <Nav className=\"ml-auto\">\r\n            <Nav.Link href=\"/cart\"><i className=\"fas fa-shopping-cart pr-2\"></i>Cart</Nav.Link>\r\n            {\r\n               userInfo ? (\r\n                 <NavDropdown title={userInfo.name} id=\"username\">\r\n                     <LinkContainer to='/profile'>\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                   </LinkContainer>\r\n                     \r\n                      <NavDropdown.Item onClick={handleLogout}>Logout</NavDropdown.Item>\r\n                 </NavDropdown>  \r\n               ):(\r\n               <Nav.Link href=\"/login\"><i className=\"fas fa-user pr-2\"></i>Sign In</Nav.Link> \r\n               )\r\n            }\r\n            {\r\n              userInfo && userInfo.isAdmin && (\r\n\r\n                <NavDropdown title='Admin' id=\"userAdmin\">\r\n\r\n                     <LinkContainer to='/admin/userList'>\r\n                      <NavDropdown.Item>Users</NavDropdown.Item>\r\n                   </LinkContainer>\r\n\r\n                   <LinkContainer to='/admin/productList'>\r\n                      <NavDropdown.Item>Products</NavDropdown.Item>\r\n                   </LinkContainer>\r\n                     \r\n                   <LinkContainer to='/admin/orders'>\r\n                      <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                   </LinkContainer> \r\n                   <NavDropdown.Item onClick={handleLogout}>Logout</NavDropdown.Item>\r\n                     \r\n                 </NavDropdown>  \r\n              )  \r\n            }\r\n           </Nav> \r\n           </Container>  \r\n        </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import axios from 'axios'\r\nimport {PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS ,\r\n    PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, \r\n    PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n     PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\r\n      PRODUCT_CREATE_REQUEST,\r\n      PRODUCT_CREATE_SUCCESS,\r\n      PRODUCT_CREATE_FAIL,\r\n      PRODUCT_UPDATE_REQUEST,\r\n      PRODUCT_UPDATE_SUCCESS,\r\n      PRODUCT_UPDATE_FAIL,\r\n      PRODUCT_CREATE_REVIEW_FAIL,\r\n      PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      PRODUCT_CREATE_REVIEW_REQUEST,\r\n      PRODUCT_TOP_FAIL,\r\n      PRODUCT_TOP_SUCCESS,\r\n      PRODUCT_TOP_REQUEST\r\n\r\n} from '../constains/productConstains'\r\n\r\nexport const listProducts = (keyword = '',pageNumber='')=>async(dispatch)=>{\r\n try {\r\n     dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n     const {data} = await axios.get(`/admin/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n      dispatch({\r\n          type:PRODUCT_LIST_SUCCESS,\r\n          payload:data\r\n      })\r\n    } catch (error) {\r\n     \r\n     dispatch({\r\n         type:PRODUCT_LIST_FAIL,\r\n         payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n     })   \r\n }   \r\n} \r\n\r\n\r\n//Single Product\r\n\r\nexport const listProductDetails = (id)=>async(dispatch)=>{\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/admin/api/products/${id}`)\r\n   \r\n         dispatch({\r\n             type:PRODUCT_DETAILS_SUCCESS,\r\n             payload:data\r\n         })\r\n       } catch (error) {\r\n        \r\n        dispatch({\r\n            type:PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }   \r\n   } \r\n\r\n //Product Delete\r\n   export const deleteProduct = (id)=>async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({type: PRODUCT_DELETE_REQUEST})\r\n\r\n      const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n         await axios.delete(`/admin/api/products/${id}`,config)\r\n   \r\n         dispatch({\r\n             type:PRODUCT_DELETE_SUCCESS,\r\n         })\r\n       } catch (error) {\r\n        \r\n        dispatch({\r\n            type:PRODUCT_DELETE_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }   \r\n   } \r\n   \r\n   export const createProduct = ()=>async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({type: PRODUCT_CREATE_REQUEST})\r\n\r\n      const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n         const {data} = await axios.post(`/admin/api/products`,{},config)\r\n   \r\n         dispatch({\r\n             type:PRODUCT_CREATE_SUCCESS,\r\n             payload:data\r\n         })\r\n       } catch (error) {\r\n        \r\n        dispatch({\r\n            type:PRODUCT_CREATE_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }   \r\n   }  \r\n   \r\n  //Update Product\r\n  \r\n  export const updateProduct = (product)=>async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({type: PRODUCT_UPDATE_REQUEST})\r\n\r\n      const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n         const {data} = await axios.put(`/admin/api/products/${product._id}`,product,config)\r\n   \r\n         dispatch({\r\n             type:PRODUCT_UPDATE_SUCCESS,\r\n             payload:data\r\n         })\r\n       } catch (error) {\r\n        \r\n        dispatch({\r\n            type:PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }   \r\n   }   \r\n\r\n//product Review\r\n\r\n   export const reviewProductCreate = (productId,review)=>async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({type: PRODUCT_CREATE_REVIEW_REQUEST})\r\n\r\n      const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n         await axios.post(`/admin/api/products/${productId}/reviews`,review,config)\r\n   \r\n         dispatch({\r\n             type:PRODUCT_CREATE_REVIEW_SUCCESS,\r\n         })\r\n       } catch (error) {\r\n        \r\n        dispatch({\r\n            type:PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }   \r\n   }   \r\n \r\n  //Top Rated Product\r\n  \r\n  export const listTopProducts = ()=>async(dispatch)=>{\r\n    try {\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n\r\n        const {data} = await axios.get(`/admin/api/products/top`)\r\n   \r\n         dispatch({\r\n             type:PRODUCT_TOP_SUCCESS,\r\n             payload:data\r\n         })\r\n       } catch (error) {\r\n        \r\n        dispatch({\r\n            type:PRODUCT_TOP_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }   \r\n   }   \r\n \r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Rating = ({value,text,color}) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} \r\n                className=\r\n                {value >=1 ?\r\n                 'fas fa-star' : \r\n                 value >=0.5 ?\r\n                  'fas fa-star-half-alt'\r\n                 :\r\n                 'far fa-star' \r\n                 }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} \r\n                className=\r\n                {value >=2 ?\r\n                 'fas fa-star' : \r\n                 value >=1.5 ?\r\n                  'fas fa-star-half-alt'\r\n                 :\r\n                 'far fa-star' \r\n                 }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} \r\n                className=\r\n                {value >=3 ?\r\n                 'fas fa-star' : \r\n                 value >=2.5 ?\r\n                  'fas fa-star-half-alt'\r\n                 :\r\n                 'far fa-star' \r\n                 }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} \r\n                className=\r\n                {value >=4 ?\r\n                 'fas fa-star' : \r\n                 value >=3.5 ?\r\n                  'fas fa-star-half-alt'\r\n                 :\r\n                 'far fa-star' \r\n                 }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} \r\n                className=\r\n                {value >=5 ?\r\n                 'fas fa-star' : \r\n                 value >=4.5 ?\r\n                  'fas fa-star-half-alt'\r\n                 :\r\n                 'far fa-star' \r\n                 }>\r\n                </i>\r\n            </span>\r\n\r\n                <span>{text &&  text}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nRating.defaultProps ={\r\n    color:'#f8e825'\r\n}\r\n\r\n\r\nexport default Rating;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Rating from '../Rating/Rating';\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n               <Card.Title as='div'>\r\n                 <strong>{product.name}</strong>\r\n               </Card.Title>\r\n            </Link>\r\n            <Card.Text as=\"div\">\r\n                 <Rating\r\n                 value={product.rating}\r\n                 text={`${product.numReviews} reviews`}\r\n                 ></Rating>\r\n            </Card.Text>\r\n            <Card.Text as=\"h3\">\r\n                 ${product.price}\r\n            </Card.Text> \r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Product;","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner \r\n        animation=\"border\" \r\n        role=\"status\"\r\n        style={{\r\n           width:'100px',\r\n           height:'100px',\r\n           margin:'auto',\r\n           display:'block' \r\n        }}\r\n        >\r\n         <span className=\"sr-only\">Loading...</span>  \r\n        </Spinner>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({variant,children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n         {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps ={\r\n  variant:'info'\r\n}\r\nexport default Message\r\n\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({pages,page,isAdmin=false,keyword=''}) => {\r\n    \r\n    \r\n    return pages >1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x =>(\r\n                <LinkContainer\r\n                 key={x+1}\r\n                 to={!isAdmin ? keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x+1}`\r\n                 : `/admin/productList/${x+1}`\r\n                  }\r\n                 >\r\n                   <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    );\r\n};\r\n\r\nexport default Paginate;","import React, { useEffect } from 'react';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { listTopProducts } from '../../actions/productActions';\r\nimport Loader from '../../Loader/Loader'\r\nimport Message from '../Message/Message'\r\n\r\nconst ProductCarosel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated) \r\n    const {loading,error,products} = productTopRated\r\n\r\n    useEffect(() =>{\r\n        dispatch(listTopProducts())\r\n    },[dispatch])\r\n\r\n    return loading ? <Loader></Loader> : error ? <Message variant=\"danger\">{error}</Message>\r\n    :(\r\n        <Carousel pause='hover' className='bg-dark'>\r\n             {products.map(product =>(\r\n                 <Carousel.Item key={product._id}>\r\n                   <Link to={`/product/${product._id}`}>\r\n                    <Image src={product.image} alt={product.name} />\r\n                   </Link>\r\n                    <Carousel.Caption className='carousel-caption'>\r\n                      <h2>\r\n                        {product.name}\r\n                        \r\n                        (${product.price})  \r\n                      </h2>\r\n                    </Carousel.Caption>\r\n                 </Carousel.Item>\r\n             ))} \r\n        </Carousel>\r\n    )\r\n};\r\n\r\nexport default ProductCarosel;","import React from 'react';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nconst Meta = ({title}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default Meta;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {listProducts} from '../../../actions/productActions'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Product from '../../Products/Product';\r\nimport Loader from '../../../Loader/Loader';\r\nimport Message from '../../Message/Message';\r\nimport { useParams } from 'react-router-dom';\r\nimport Paginate from '../../Paginate/Paginate';\r\nimport ProductCarosel from '../../ProductCarosel/ProductCarosel';\r\nimport Meta from '../../Meta';\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const {keyword,pageNumber} = useParams()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n     \r\n    const {loading,error,products,page,pages} = productList\r\n\r\n    useEffect(()=>{\r\n        dispatch(listProducts(keyword,pageNumber))  \r\n    },[dispatch,keyword,pageNumber])\r\n\r\n    return (\r\n        <>\r\n         <Meta title={'Welcome to ProShop | Home'}></Meta>\r\n         {!keyword && <ProductCarosel></ProductCarosel>}\r\n           <h1>Latest Products</h1>\r\n           {\r\n            loading ?(\r\n              <Loader></Loader>\r\n            ): error ?(\r\n              <Message variant=\"danger\" >{error}</Message>\r\n            ):\r\n            <> \r\n            <Row>\r\n               \r\n            {\r\n                products.map(product =>(\r\n                  <Col  key={product._id} sm={12} md={6} lg={4} xl ={3}>\r\n                    <Product product = {product}></Product>\r\n                  </Col> \r\n                ))\r\n                  \r\n            } \r\n           \r\n         </Row>\r\n          <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} ></Paginate>\r\n          </>\r\n       \r\n           }\r\n          \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {listProductDetails,reviewProductCreate} from '../../../actions/productActions';\r\nimport { Button, Card, Col, Form, Image, ListGroup, ListGroupItem, Row } from 'react-bootstrap';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport Rating from '../../Rating/Rating';\r\nimport Meta from '../../Meta'\r\nimport Loader from '../../../Loader/Loader';\r\nimport Message from '../../Message/Message';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../../../constains/productConstains';\r\n\r\nconst ProductScreen = () => {\r\n   const {id}  = useParams()\r\n\r\n   const history = useHistory()\r\n\r\n   const [qty,setQty] = useState(1);\r\n   const [rating,setRating] = useState();\r\n   const [comment,setComment] = useState('');\r\n   \r\n   const dispatch = useDispatch()\r\n\r\n   const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n\r\n   const {error:errorReviewCreate, success:successReviewCreate} = productReviewCreate;\r\n\r\n   const productDetails = useSelector(state => state.productDetails)\r\n\r\n   const {loading,error,product} = productDetails;\r\n\r\n   const userLogin = useSelector(state => state.userLogin)\r\n\r\n   const {userInfo} = userLogin;\r\n\r\n\r\n   useEffect(()=>{\r\n         if(successReviewCreate){\r\n           alert('Review Created')\r\n           setRating(0)\r\n           setComment('')\r\n           dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n         }\r\n        dispatch(listProductDetails(id)) \r\n   },[dispatch,id,successReviewCreate])\r\n\r\n\r\n   const addToCartHandler = () =>{\r\n      history.push(`/cart/${id}?qty=${qty}`)\r\n   }\r\n\r\n   const submitHandler = (e) =>{\r\n     e.preventDefault()\r\n     dispatch(reviewProductCreate(id,{\r\n       rating,\r\n       comment\r\n     }))\r\n   }\r\n   \r\n  //  const product = products.find((p) => p._id === id)\r\n    \r\n    return (\r\n        <>\r\n           <Link  className=\"btn btn-light my-3\" to=\"/\">\r\n           Go Back\r\n           </Link>\r\n           {\r\n              loading ?(\r\n                <Loader></Loader>\r\n              ): error ?(\r\n                <Message variant=\"danger\" >{error}</Message>\r\n              ):\r\n              <>\r\n              <Meta title={`${product.name}`}></Meta> \r\n              <Row>\r\n              <Col md={6}>\r\n                 <Image src={product.image} alt ={product.name} fluid/>\r\n              </Col>\r\n              <Col md={3}>\r\n                 <ListGroup variant=\"flush\">\r\n                     <ListGroup.Item>\r\n                      <h3>{product.name}</h3>\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                      <Rating\r\n                      value={product.rating}\r\n                      text={`${product.numReviews} reviews`}\r\n                      />\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                      Price:${product.price}\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                      Description:{product.description}\r\n                     </ListGroup.Item>\r\n\r\n                 </ListGroup>\r\n              </Col>\r\n\r\n              <Col md={3}>\r\n                <Card>\r\n\r\n                <ListGroup variant=\"flush\">\r\n                     <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>Price</Col>\r\n                           <Col><strong>${product.price}</strong></Col>\r\n                       </Row>\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>Status</Col>\r\n                            <Col>{product.countInStock > 0 ? 'In Stock' : \"Out of Stock\"}</Col>\r\n                       </Row>\r\n                     </ListGroup.Item>\r\n                      {\r\n                       product.countInStock &&\r\n                       <ListGroupItem>\r\n                        <Row>\r\n                          <Col>Qty</Col>\r\n                          <Col>\r\n                           <Form.Control\r\n                           as='select'\r\n                           value={qty}\r\n                           onChange={(e) => setQty(e.target.value)}\r\n                           >\r\n                            {\r\n                              [...Array(product.countInStock).keys()].map(x =>(\r\n                                <option key={x +1}  value={ x+1 }>\r\n                                  { x  + 1 }\r\n                                </option>\r\n                              ))\r\n                            }\r\n                           </Form.Control>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                       </ListGroupItem> \r\n                      }\r\n\r\n                     <ListGroup.Item>\r\n                        <Button className=\"btn-block\" \r\n                         onClick={addToCartHandler}\r\n                        type=\"button\" disabled={product.countInStock === 0 ? true : false }>\r\n                            Add To Cart\r\n                        </Button>\r\n                     </ListGroup.Item>\r\n                </ListGroup>\r\n                </Card>\r\n              </Col>\r\n          </Row> \r\n          <Row>\r\n             \r\n            <Col md={6}>\r\n               <h2>Reviews</h2>\r\n               {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n            \r\n               <ListGroup variant='flush'>\r\n                  {product.reviews.map((review) =>(\r\n                       \r\n                       <ListGroupItem key={review._id}>\r\n                          <strong>{review.name}</strong>\r\n                           <Rating value={review.rating}></Rating>\r\n                            <p>{review.createdAt.substring(0,10)}</p>\r\n                             <p>{review.comment}</p>\r\n\r\n                       </ListGroupItem> \r\n\r\n                  ))} \r\n\r\n                  <ListGroupItem>\r\n                    <h2>Write A Customer Review</h2>\r\n                    {errorReviewCreate && <Message variant='danger'>{errorReviewCreate}</Message>}\r\n                    {userInfo ?\r\n                    (\r\n                     <Form onSubmit={submitHandler}>\r\n                       <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control as='select' value={rating}\r\n                         onChange={(e) => setRating( e.target.value)}\r\n                        >\r\n                           <option value=\"\">Select...</option>\r\n                           <option value=\"1\">1-Poor</option>\r\n                           <option value=\"2\">2-Fair</option>\r\n                           <option value=\"3\">3-Good</option>\r\n                           <option value=\"4\">4-very Good</option>\r\n                           <option value=\"5\">5-Excellent</option>\r\n\r\n                          </Form.Control>  \r\n\r\n                       </Form.Group>\r\n\r\n                       <Form.Group controlId=\"comment\">\r\n                          <Form.Label>Comment</Form.Label>\r\n                          <Form.Control\r\n                          as='textarea' row=\"3\" \r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                          >\r\n                          </Form.Control>\r\n                       </Form.Group>\r\n                         <Button\r\n                         type='submit' variant=\"primary\">\r\n                            Submit\r\n                         </Button>\r\n                     </Form>\r\n\r\n\r\n                      ):(\r\n                      <Message>Please <Link to='/login'>Sign in</Link>To Write A Review</Message>   \r\n                    )}\r\n                    \r\n                  </ListGroupItem> \r\n                   \r\n               </ListGroup>\r\n            \r\n            </Col> \r\n\r\n          </Row>\r\n         \r\n          </>\r\n           }\r\n           \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductScreen;","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../constains/cartConstains\";\r\n\r\n\r\nexport const  addToCart =(id,qty)=> async(dispatch,getState) =>{\r\n  \r\n     const {data} = await axios.get(`/admin/api/products/${id}`)\r\n\r\n\r\n     dispatch({\r\n         type:CART_ADD_ITEM,\r\n         payload:{\r\n             product:data._id,\r\n             name:data.name,\r\n             image:data.image,\r\n             price:data.price,\r\n             countInStock:data.countInStock,\r\n             qty\r\n         }\r\n     })\r\n\r\n     localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) =>(dispatch,getState) =>{\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:id\r\n    })\r\n\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) =>(dispatch) =>{\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload:data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) =>(dispatch) =>{\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload:data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod',JSON.stringify(data))\r\n}","import React from 'react';\r\nimport { useEffect,} from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {addToCart, removeFromCart} from '../../../actions/cartActions';\r\nimport { Button, Col, Form, Image, ListGroup, ListGroupItem, Row } from 'react-bootstrap';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport Message from '../../Message/Message';\r\n\r\nconst CartScreen = () => {\r\n\r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n\r\n    const qty = history.location.search ? Number(history.location.search.split('=')[1]):1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n\r\n    useEffect(()=>{\r\n        if(id){\r\n            dispatch(addToCart(id,qty))\r\n        }\r\n    },[dispatch,id,qty])\r\n\r\n    const  removeFromCartHandler  = (id) =>  {\r\n          dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const handleCheckout =()=>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n          <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            {\r\n              cartItems.length === 0 ?(\r\n                  <Message>Your cart is empty <Link to='/'>Go Back</Link></Message>\r\n              ):(\r\n                 <ListGroup variant=\"flush\">\r\n                     {\r\n                       cartItems.map(item =>(\r\n                        <ListGroupItem key={item.product}>\r\n                          \r\n                          <Row>\r\n                              <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded/>  \r\n                              </Col>\r\n                              <Col md={3}>\r\n                                <Link to ={`/product/${item.product}`}>{item.name}</Link>  \r\n                              </Col>\r\n                              <Col md={2}>\r\n                                 ${item.price} \r\n                              </Col>\r\n                              <Col md={2}>\r\n                                <Form.Control\r\n                                as='select'\r\n                                value={item.qty}\r\n                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                >\r\n                                    {\r\n                                    [...Array(item.countInStock).keys()].map(x =>(\r\n                                        <option key={x +1}  value={ x+1 }>\r\n                                        { x  + 1 }\r\n                                        </option>\r\n                                    ))\r\n                                    }\r\n                                </Form.Control>\r\n                              </Col>\r\n                              <Col md={2}>\r\n                                   \r\n                                 <Button type=\"button\" variant=\"light\"\r\n                                 onClick={()=>removeFromCartHandler(item.product)}\r\n                                 >\r\n                                  <i className=\"fas fa-trash\"></i>   \r\n                                </Button>  \r\n\r\n                              </Col>\r\n                          </Row>\r\n                            \r\n                        </ListGroupItem>\r\n\r\n                       ))  \r\n                     }\r\n                 </ListGroup>\r\n              )  \r\n            }\r\n          </Col>\r\n          <Col md={4}>\r\n           <ListGroup variant=\"flush\">\r\n               <ListGroupItem>\r\n                   <h2>SubTotal({cartItems.reduce((acc,item)=>acc+item.qty,0)}) Items</h2>\r\n                   Total:$ {\r\n                     cartItems.reduce((acc,item)=>acc+ item.qty * item.price,0).toFixed(2)}\r\n               </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <Button \r\n                    type=\"button\"\r\n                    className=\"btn-block\"\r\n                    disabled={cartItems.length === 0}\r\n                    onClick={handleCheckout}\r\n                    >\r\n                     Proceed To Checkout \r\n                    </Button>\r\n                </ListGroupItem>\r\n           </ListGroup>\r\n          </Col>\r\n         \r\n\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CartScreen;","import React from 'react';\r\nimport {Col, Container, Row} from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n           <Row className=\"justify-content-md-center\">\r\n              <Col xs={12} md={6}>\r\n                {children}\r\n              </Col>\r\n           </Row> \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FormContainer;","import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {login} from '../../../actions/userActions'\r\nimport FormContainer from '../../FormContainer/FormContainer';\r\nimport Message from '../../Message/Message';\r\nimport Loader from '../../../Loader/Loader';\r\n\r\nconst LoginScreen = () => {\r\n     const [email,setEmail] = useState('')\r\n     const [password,setPassword] = useState('')\r\n     \r\n     const dispatch = useDispatch()\r\n\r\n     const userLogin = useSelector(state => state.userLogin )\r\n     const {loading,error,userInfo} = userLogin \r\n\r\n     const history = useHistory()\r\n     const redirect = history.location.search ? history.location.search.split('=')[1]:'/'\r\n       \r\n     useEffect(() =>{\r\n           if(userInfo){\r\n               history.push(redirect)\r\n           }  \r\n     },[history,redirect,userInfo]) \r\n\r\n     const submitHandler = (e)=>{\r\n       dispatch(login(email,password))  \r\n       e.preventDefault()\r\n     } \r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader></Loader>}\r\n            <Form onSubmit={submitHandler} >\r\n               <Form.Group controlId=\"email\">\r\n                   <Form.Label>Email Address:</Form.Label>\r\n                   <Form.Control type=\"email\" placeholder=\"Enter Email\"\r\n                   value={email}\r\n                   onChange={(e) => setEmail(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n               <Form.Group controlId=\"password\">\r\n                   <Form.Label>Password:</Form.Label>\r\n                   <Form.Control type=\"password\" placeholder=\"Enter Password\"\r\n                   value={password}\r\n                   onChange={(e) => setPassword(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n               <Button type=\"submit\" variant=\"primary\">\r\n                   Sign In\r\n               </Button>\r\n            </Form>\r\n             \r\n             <Row className=\"py-3\">\r\n                 <Col>\r\n                  New Customer?{' '}\r\n                    <Link to={redirect ? `/register/redirect=${redirect}`:'/register'}>Register</Link>\r\n                 </Col>\r\n\r\n             </Row>\r\n\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;","import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {register} from '../../../actions/userActions'\r\nimport FormContainer from '../../FormContainer/FormContainer';\r\nimport Message from '../../Message/Message';\r\nimport Loader from '../../../Loader/Loader';\r\n\r\nconst RegisterScreen = () => {\r\n    const [name,setName] = useState('')\r\n     const [email,setEmail] = useState('')\r\n     const [password,setPassword] = useState('')\r\n     const [confirmPassword,setConfirmPassword] = useState('')\r\n     const [message,setMessage] = useState(null)\r\n     \r\n     const dispatch = useDispatch()\r\n\r\n     const userRegister = useSelector(state => state.userRegister )\r\n     const {loading,error,userInfo} = userRegister\r\n\r\n     const history = useHistory()\r\n     const redirect = history.location.search ? history.location.search.split('=')[1]:'/'\r\n       \r\n     useEffect(() =>{\r\n           if(userInfo){\r\n               history.push(redirect)\r\n           }  \r\n     },[history,redirect,userInfo]) \r\n\r\n     const submitHandler = (e)=>{\r\n       if(password !== confirmPassword){\r\n           setMessage('Password Did not Match')\r\n       }\r\n       else{\r\n        dispatch(register(name,email,password))  \r\n       }  \r\n      \r\n       e.preventDefault()\r\n     } \r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader></Loader>}\r\n            <Form onSubmit={submitHandler} >\r\n\r\n            <Form.Group controlId=\"name\">\r\n                   <Form.Label>Name:</Form.Label>\r\n                   <Form.Control type=\"text\" placeholder=\"Enter Name\"\r\n                   value={name}\r\n                   onChange={(e) =>setName(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"email\">\r\n                   <Form.Label>Email Address:</Form.Label>\r\n                   <Form.Control type=\"email\" placeholder=\"Enter Email\"\r\n                   value={email}\r\n                   onChange={(e) => setEmail(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n               <Form.Group controlId=\"password\">\r\n                   <Form.Label>Password:</Form.Label>\r\n                   <Form.Control type=\"password\" placeholder=\"Enter Password\"\r\n                   value={password}\r\n                   onChange={(e) => setPassword(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"ConfirmPassword\">\r\n                   <Form.Label>Confirm Password:</Form.Label>\r\n                   <Form.Control type=\"password\" placeholder=\"Confirm Password\"\r\n                   value={confirmPassword}\r\n                   onChange={(e) => setConfirmPassword(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n               <Button type=\"submit\" variant=\"primary\">\r\n                   Register\r\n               </Button>\r\n            </Form>\r\n             \r\n             <Row className=\"py-3\">\r\n                 <Col>\r\n                  Have An ACcount?{' '}\r\n                    <Link to={redirect ? `/login/redirect=${redirect}`:'/login'}>Login</Link>\r\n                 </Col>\r\n\r\n             </Row>\r\n\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;","import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Form, Row, Table } from 'react-bootstrap';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {getUserDetails, updateUserProfile} from '../../../actions/userActions'\r\nimport Message from '../../Message/Message';\r\nimport Loader from '../../../Loader/Loader';\r\nimport { listMyOrders } from '../../../actions/orderAction';\r\n\r\nconst ProfileScreen = () => {\r\n    const [name,setName] = useState('')\r\n     const [email,setEmail] = useState('')\r\n     const [password,setPassword] = useState('')\r\n     const [confirmPassword,setConfirmPassword] = useState('')\r\n     const [message,setMessage] = useState(null)\r\n     \r\n     const dispatch = useDispatch()\r\n\r\n     const userDetails = useSelector(state => state.userDetails )\r\n     const {loading,error,user} = userDetails\r\n\r\n     const userLogin = useSelector(state => state.userLogin )\r\n     const {userInfo} = userLogin\r\n\r\n     const userUpdateProfile = useSelector(state => state.userUpdateProfile )\r\n     const {success} = userUpdateProfile\r\n\r\n     const  orderMyList = useSelector(state => state.orderMyList )\r\n     const {loading:loadingOrders,error:errorOrders,orders} = orderMyList\r\n\r\n     const history = useHistory()\r\n    \r\n       \r\n     useEffect(() =>{\r\n           if(!userInfo){\r\n               history.push('/login')\r\n           }\r\n           else{\r\n               if(!user.name){\r\n                   dispatch(getUserDetails('profile'))\r\n                   dispatch(listMyOrders())\r\n               }\r\n               else{\r\n                   setName(user.name)\r\n                   setEmail(user.email)\r\n               }\r\n           }  \r\n     },[history,userInfo,user,dispatch]) \r\n\r\n     const submitHandler = (e)=>{\r\n       if(password !== confirmPassword){\r\n           setMessage('Password Did not Match')\r\n       }\r\n       else{\r\n        //Dispatch Update\r\n         dispatch(updateUserProfile({id:user._id,name,email,password}))\r\n       }  \r\n      \r\n       e.preventDefault()\r\n     } \r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {success && <Message variant=\"success\">Profile Updated</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader></Loader>}\r\n            <Form onSubmit={submitHandler} >\r\n\r\n            <Form.Group controlId=\"name\">\r\n                   <Form.Label>Name:</Form.Label>\r\n                   <Form.Control type=\"text\" placeholder=\"Enter Name\"\r\n                   value={name}\r\n                   onChange={(e) =>setName(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"email\">\r\n                   <Form.Label>Email Address:</Form.Label>\r\n                   <Form.Control type=\"email\" placeholder=\"Enter Email\"\r\n                   value={email}\r\n                   onChange={(e) => setEmail(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n               <Form.Group controlId=\"password\">\r\n                   <Form.Label>Password:</Form.Label>\r\n                   <Form.Control type=\"password\" placeholder=\"Enter Password\"\r\n                   value={password}\r\n                   onChange={(e) => setPassword(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"ConfirmPassword\">\r\n                   <Form.Label>Confirm Password:</Form.Label>\r\n                   <Form.Control type=\"password\" placeholder=\"Confirm Password\"\r\n                   value={confirmPassword}\r\n                   onChange={(e) => setConfirmPassword(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n               <Button type=\"submit\" variant=\"primary\">\r\n                   Update\r\n               </Button>\r\n            </Form>\r\n             \r\n            </Col>\r\n            <Col md={9}>\r\n               <h2>My Orders</h2>\r\n               {loadingOrders ? <Loader></Loader>: errorOrders ? <Message variant='danger'>{errorOrders}</Message>:(\r\n                   <Table striped bordered hover responsive className=\"table-sm\">\r\n                       <thead>\r\n                          <tr>\r\n                           <th>ID</th>\r\n                           <th>DATE</th>\r\n                           <th>TOTAL</th>\r\n                           <th>PAID</th>\r\n                           <th>DELIVERED</th> \r\n                           <th></th>  \r\n                         </tr> \r\n                        </thead>\r\n                         <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                  <td>{order._id}</td>\r\n                                  <td>{order.createdAt.substring(0,10)}</td>\r\n                                  <td>$\r\n                                       {order.totalPrice}</td>\r\n                                  <td>{order.isPaid ? (\r\n                                     order.paidAt.substring(0,10) \r\n                                  ):(\r\n                                    <i className='fas fa-times' style={{color:'red'}}></i>  \r\n                                  )}\r\n                                  </td>\r\n\r\n                                   <td>{order.isDelivered ? (\r\n                                     order.deliveredAt.subString(0,10) \r\n                                  ):(\r\n                                    <i className='fas fa-times' style={{color:'red'}}></i>  \r\n                                  )}</td>\r\n                                  <td>\r\n                                    <Link to={`/order/${order._id}`}>\r\n                                       <Button variant='light' className=\"btn-sm\">Details</Button> \r\n                                    </Link>  \r\n                                  </td>\r\n                                </tr>\r\n                            ))} \r\n                         </tbody> \r\n                       \r\n                   </Table>\r\n               )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;","import axios from 'axios'\r\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST,\r\n     ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL,\r\n     ORDER_DELIVER_SUCCESS,\r\n     ORDER_DELIVER_REQUEST,\r\n      ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, \r\n      ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST,\r\n       ORDER_LIST_SUCCESS, ORDER_MY_LIST_FAIL, \r\n       ORDER_MY_LIST_REQUEST, ORDER_MY_LIST_SUCCESS, \r\n       ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from '../constains/orderConstains'\r\n\r\nexport const orderCreate = (order) =>async(dispatch,getState)=>{\r\n    try {\r\n       dispatch({\r\n           type:ORDER_CREATE_REQUEST\r\n       }) \r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n               'Content-type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const {data} = await axios.post(`/api/order`,order,\r\n           config\r\n       ) \r\n       \r\n       dispatch({\r\n        type:ORDER_CREATE_SUCCESS,\r\n        payload:data\r\n    })\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_CREATE_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n\r\n//Order Details\r\n\r\nexport const getOrderDetails = (id) =>async(dispatch,getState)=>{\r\n    try {\r\n       dispatch({\r\n           type:ORDER_DETAILS_REQUEST\r\n       }) \r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const {data} = await axios.get(`/api/order/${id}`,\r\n           config\r\n       ) \r\n       \r\n       dispatch({\r\n        type:ORDER_DETAILS_SUCCESS,\r\n        payload:data\r\n    })\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_DETAILS_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (orderId,paymentResult) =>async(dispatch,getState)=>{\r\n    try {\r\n       dispatch({\r\n           type:ORDER_PAY_REQUEST\r\n       }) \r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n                 'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const {data} = await axios.put(`/api/order/${orderId}/pay`,paymentResult,\r\n           config\r\n       ) \r\n       \r\n       dispatch({\r\n        type:ORDER_PAY_SUCCESS,\r\n        payload:data\r\n    })\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_PAY_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () =>async(dispatch,getState)=>{\r\n    try {\r\n       dispatch({\r\n           type:ORDER_MY_LIST_REQUEST\r\n       }) \r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const {data} = await axios.get(`/api/order/myOrders`,\r\n           config\r\n       ) \r\n       \r\n       dispatch({\r\n        type:ORDER_MY_LIST_SUCCESS,\r\n        payload:data\r\n    })\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_MY_LIST_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n\r\n//all Orders\r\nexport const listOrders = () =>async(dispatch,getState)=>{\r\n    try {\r\n       dispatch({\r\n           type:ORDER_LIST_REQUEST\r\n       }) \r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const {data} = await axios.get(`/api/order`,\r\n           config\r\n       ) \r\n       \r\n       dispatch({\r\n        type:ORDER_LIST_SUCCESS,\r\n        payload:data\r\n    })\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_LIST_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n\r\n//update to delivered\r\n\r\nexport const deliverOrder = (order) =>async(dispatch,getState)=>{\r\n    try {\r\n       dispatch({\r\n           type:ORDER_DELIVER_REQUEST\r\n       }) \r\n\r\n       const {userLogin:{userInfo}}=getState()\r\n     \r\n       const config = {\r\n           headers:{\r\n                 'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n           }\r\n       }\r\n\r\n       const {data} = await axios.put(`/api/order/${order._id}/delivered`,\r\n           {},config\r\n       ) \r\n       \r\n       dispatch({\r\n        type:ORDER_DELIVER_SUCCESS,\r\n        payload:data\r\n    })\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_DELIVER_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        })   \r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\n\r\nconst CheckoutSteps = ({step1,step2,step3,step4}) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-4\">\r\n           <Nav.Item>\r\n              {step1 ?( \r\n                <Nav.Link to=\"/login\"> Sign In</Nav.Link> \r\n\r\n              ):<Nav.Link disabled> Sign In</Nav.Link>\r\n              }    \r\n           </Nav.Item>\r\n\r\n           <Nav.Item>\r\n              {step2 ?( \r\n                <Nav.Link to=\"/shipping\"> Shipping</Nav.Link> \r\n             \r\n              ):<Nav.Link disabled> Shipping</Nav.Link>\r\n              }    \r\n           </Nav.Item>\r\n           <Nav.Item>\r\n              {step3 ?( \r\n                <Nav.Link to=\"/payment\"> Payment</Nav.Link> \r\n         \r\n              ):<Nav.Link disabled> Payment</Nav.Link>\r\n              }    \r\n           </Nav.Item>\r\n           <Nav.Item>\r\n              {step4 ?( \r\n                <Nav.Link to=\"/placeOrder\"> PlaceOrder</Nav.Link> \r\n               \r\n              ):<Nav.Link disabled>PlaceOrder</Nav.Link>\r\n              }    \r\n           </Nav.Item>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default CheckoutSteps;","import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {saveShippingAddress} from '../../../actions/cartActions'\r\nimport FormContainer from '../../FormContainer/FormContainer';\r\nimport CheckoutSteps from '../../CheckoutSteps/CheckoutSteps';\r\n\r\nconst ShipingScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n    const{shippingAddress} = cart \r\n\r\n    const history = useHistory()\r\n    const [address,setAddress] = useState(shippingAddress.address)\r\n    const [city,setCity] = useState(shippingAddress.city)\r\n    const [postalCode,setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country,setCountry] = useState(shippingAddress.country)\r\n\r\n     const handleSubmit = (e) =>{\r\n        e.preventDefault() \r\n        dispatch(saveShippingAddress({address,city,postalCode,country}))\r\n        history.push('/payment'); \r\n     }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2></CheckoutSteps>\r\n            <h1>Shipping Details </h1>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"address\">\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control \r\n                   type=\"text\"\r\n                   placeholder=\"Your Address\"\r\n                   value={address}\r\n                   onChange={e => setAddress(e.target.value)}\r\n                  ></Form.Control>    \r\n                </Form.Group> \r\n\r\n                <Form.Group controlId=\"city\">\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control \r\n                   type=\"text\"\r\n                   placeholder=\"Your City\"\r\n                   value={city}\r\n                   onChange={e => setCity(e.target.value)}\r\n                  ></Form.Control>    \r\n                </Form.Group> \r\n\r\n                <Form.Group controlId=\"postalCode\">\r\n                  <Form.Label>Postal Code</Form.Label>\r\n                  <Form.Control \r\n                   type=\"Number\"\r\n                   placeholder=\"Your PostalCode\"\r\n                   value={postalCode}\r\n                   onChange={e => setPostalCode(e.target.value)}\r\n                  ></Form.Control>    \r\n                </Form.Group> \r\n\r\n                <Form.Group controlId=\"country\">\r\n                  <Form.Label>Country</Form.Label>\r\n                  <Form.Control \r\n                   type=\"text\"\r\n                   placeholder=\"Your Country\"\r\n                   value={country}\r\n                   onChange={e => setCountry(e.target.value)}\r\n                  ></Form.Control>    \r\n                </Form.Group> \r\n                 \r\n                <Button type=\"Submit\" variant=\"primary\">Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default ShipingScreen;","import React, { useState } from 'react';\r\nimport { Button, Col, Form } from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {savePaymentMethod} from '../../../actions/cartActions'\r\nimport FormContainer from '../../FormContainer/FormContainer';\r\nimport CheckoutSteps from '../../CheckoutSteps/CheckoutSteps';\r\n\r\nconst PaymentScreen = () => {\r\n     \r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n    const{shippingAddress} = cart \r\n\r\n    if(!shippingAddress){\r\n        history.push('/shipping');\r\n    }\r\n\r\n  \r\n    const [paymentMethod,setPaymentMethod] = useState('payPal')\r\n\r\n     const handleSubmit = (e) =>{\r\n        e.preventDefault() \r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeOrder'); \r\n     }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n             <h1>Payment Method </h1>\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n             \r\n               <Form.Group>\r\n                   <Form.Label as='legend'>Select Method</Form.Label>\r\n               \r\n                <Col>\r\n                   <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"payPal or Credit Card\"\r\n                    value=\"payPal\" \r\n                    name=\"PaymentMethod\"\r\n                    checked\r\n                    onChange={(e) =>setPaymentMethod(e.target.value)} \r\n                   >\r\n                   </Form.Check>\r\n                 </Col>\r\n                 </Form.Group>\r\n                \r\n                <Button type=\"Submit\" variant=\"primary\">Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default PaymentScreen;","import React, { useEffect } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport CheckoutSteps from '../../CheckoutSteps/CheckoutSteps';\r\nimport { Button, Card, Col, Image, ListGroup, Row } from 'react-bootstrap';\r\nimport Message from '../../Message/Message';\r\nimport { orderCreate } from '../../../actions/orderAction';\r\n\r\nconst PlaceOrderScreen = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    //calculate prices\r\n\r\n    const addDecimals = (num) =>{\r\n        return (Math.round(num *100)/100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = addDecimals(\r\n        cart.cartItems.reduce((acc,item)=> acc + item.price * item.qty,0)\r\n    ) \r\n\r\n    cart.shippingPrice = addDecimals( cart.itemsPrice >100 ? 0 :100)\r\n\r\n    cart.taxPrice = addDecimals(Number(0.15 * cart.itemsPrice).toFixed(2))\r\n\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice)\r\n        + Number(cart.shippingPrice)\r\n        + Number(cart.taxPrice)\r\n        ).toFixed(2)\r\n\r\n     const createOrder = useSelector(state => state.orderCreate)\r\n     const {order,success,error} = createOrder \r\n\r\n      useEffect(()=>{\r\n            \r\n         if(success){\r\n           history.push(`/order/${order._id}`)\r\n         }\r\n      },[history,success,order._id]) \r\n\r\n      const handlePlaceOrder = ()=>{\r\n          dispatch(orderCreate({\r\n              orderItems:cart.cartItems,\r\n              shippingAddress:cart.shippingAddress,\r\n              paymentMethod:cart.paymentMethod,\r\n              itemsPrice:cart.itemsPrice,\r\n              taxPrice:cart.taxPrice,\r\n              shippingPrice:cart.shippingPrice,\r\n              totalPrice:cart.totalPrice,\r\n          }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <CheckoutSteps step1 step2 step3 step4/>\r\n         <Row>\r\n          <Col md={8}>\r\n           <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p> <strong style={{fontWeight:'bold', color:'#000'}}>Address: </strong>\r\n                    \r\n                    {cart.shippingAddress.address} {cart.shippingAddress.city}\r\n                     {cart.shippingAddress.postalCode} {cart.shippingAddress.country}\r\n                    </p>\r\n                   \r\n                </ListGroup.Item>\r\n\r\n                 <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p><strong style={{fontWeight:'bold', color:'#000'}}>Method: </strong>\r\n                      {cart.paymentMethod} \r\n                     </p>\r\n                 </ListGroup.Item>\r\n\r\n                 <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                     {cart.cartItems.length === 0 ? <Message>Your Cart is Empty</Message>\r\n                     :(\r\n                         <ListGroup variant='flush'>\r\n                             {cart.cartItems.map((item,index) =>(\r\n                                <ListGroup.Item key={index}>\r\n                                  \r\n                                    <Row>\r\n                                       <Col md={1}>\r\n                                         <Image\r\n                                         src={item.image}\r\n                                         alt={item.name}\r\n                                         rounded fluid\r\n                                         />\r\n                                       </Col> \r\n                                       <Col>\r\n                                       <Link to={`/product/${item.product}`}>\r\n                                        {item.name}\r\n                                       </Link>\r\n                                       \r\n                                       </Col>\r\n                                       <Col md={4}>\r\n                                         {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                       </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                             ))}\r\n                         </ListGroup>\r\n                     ) \r\n                    }\r\n                 </ListGroup.Item>\r\n\r\n           </ListGroup>\r\n          </Col>\r\n\r\n           <Col md={4}>\r\n               <Card>\r\n                   <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${cart.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                         \r\n                         <ListGroup.Item>\r\n                             {error && <Message variant=\"danger\">{error}</Message>}\r\n                         </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                            className=\"btn-block\"\r\n                            type=\"button\"\r\n                            disabled={cart.cartItems===0}\r\n                            onClick={handlePlaceOrder}\r\n                            >\r\n                                Place Order\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n\r\n                   </ListGroup>\r\n               </Card>\r\n           </Col>\r\n\r\n         </Row>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport {Link,useHistory,useParams} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport Loader from '../../../Loader/Loader';\r\nimport { Button, Card, Col, Image, ListGroup, ListGroupItem, Row } from 'react-bootstrap';\r\nimport Message from '../../Message/Message';\r\nimport { getOrderDetails, payOrder,deliverOrder } from '../../../actions/orderAction';\r\nimport { ORDER_PAY_RESET,ORDER_DELIVER_RESET } from '../../../constains/orderConstains';\r\n\r\nconst OrderScreen = () => {\r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady,setSdkReady] = useState(false)\r\n\r\n     const orderDetails = useSelector(state => state.orderDetails)\r\n     const {order,loading,error} = orderDetails \r\n\r\n     const userLogin = useSelector(state => state.userLogin)\r\n     const {userInfo} = userLogin \r\n\r\n\r\n     const orderPay = useSelector(state => state.orderPay)\r\n     const {loading:loadingPay,success:successPay} =  orderPay\r\n\r\n     const orderDelivered = useSelector(state => state.orderDelivered)\r\n     const {loading:loadingDeliver,success:successDeliver} =  orderDelivered\r\n\r\n     if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) => {\r\n          return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n    \r\n        order.itemsPrice = addDecimals(\r\n          order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n     }\r\n\r\n      useEffect(()=>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        const addPayPalScript = async () =>{\r\n            const {data: clientId} = await axios.get('/api/config/payPal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () =>{\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        } \r\n\r\n         if(!order || successPay || successDeliver){\r\n            dispatch({type:ORDER_PAY_RESET}) \r\n            dispatch({type:ORDER_DELIVER_RESET}) \r\n            dispatch(getOrderDetails(id))\r\n         }\r\n         else if(!order.isPaid){\r\n            if(!window.paypal){\r\n               addPayPalScript()  \r\n            }\r\n            else{\r\n                setSdkReady(true)\r\n            }\r\n         }\r\n       \r\n\r\n      },[dispatch,id,successPay,order,successDeliver,history,userInfo]) \r\n\r\n     const successPaymentHandler = (paymentResult) =>{\r\n        console.log(paymentResult) \r\n        dispatch(payOrder(id,paymentResult))\r\n     }\r\n    \r\n     const orderDeliverHandler = ()=>{\r\n         dispatch(deliverOrder(order))\r\n     }\r\n\r\n    return  loading ? ( <Loader/> ) : error ? ( <Message variant=\"danger\">{error}</Message>\r\n    ): ( \r\n    <>\r\n     <h1>Order {order._id}</h1>    \r\n    <Row>\r\n     <Col md={8}>\r\n      <ListGroup variant=\"flush\">\r\n           <ListGroup.Item>\r\n               <h2>Shipping</h2>\r\n                <p><strong style={{fontWeight:'bold', color:'#000'}}>Name: </strong>\r\n                  {order.user.name}\r\n                </p>\r\n                <p><strong style={{fontWeight:'bold', color:'#000'}}>Email: </strong>\r\n                 <a href={`/mailto:${order.user.email}`}>{order.user.email}</a>\r\n                </p>        \r\n\r\n               <p> <strong style={{fontWeight:'bold', color:'#000'}}>Address: </strong>\r\n               \r\n               {order.shippingAddress.address} {order.shippingAddress.city}\r\n                {order.shippingAddress.postalCode} {order.shippingAddress.country}\r\n               </p>\r\n                {order.isDelivered ? <Message variant=\"success\">Delivered at {order.deliveredAt}</Message>:<Message variant=\"danger\">Not Delivered</Message> }\r\n              \r\n           </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n               <h2>Payment Method</h2>\r\n               <p><strong style={{fontWeight:'bold', color:'#000'}}>Method: </strong>\r\n                 {order.paymentMethod} \r\n                </p>\r\n                {order.isPaid ? <Message variant=\"success\">Paid at {order.paidAt}</Message>:<Message variant=\"danger\">Not Paid</Message> }\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n               <h2>Order Items</h2>\r\n                {order.orderItems.length === 0 ? <Message>Your Cart is Empty</Message>\r\n                :(\r\n                    <ListGroup variant='flush'>\r\n                        {order.orderItems.map((item,index) =>(\r\n                           <ListGroup.Item key={index}>\r\n                             \r\n                               <Row>\r\n                                  <Col md={1}>\r\n                                    <Image\r\n                                    src={item.image}\r\n                                    alt={item.name}\r\n                                    rounded fluid\r\n                                    />\r\n                                  </Col> \r\n                                  <Col>\r\n                                  <Link to={`/product/${item.product}`}>\r\n                                   {item.name}\r\n                                  </Link>\r\n                                  \r\n                                  </Col>\r\n                                  <Col md={4}>\r\n                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                  </Col>\r\n                               </Row>\r\n                           </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                ) \r\n               }\r\n            </ListGroup.Item>\r\n\r\n      </ListGroup>\r\n     </Col>\r\n\r\n      <Col md={4}>\r\n          <Card>\r\n              <ListGroup variant=\"flush\">\r\n                   <ListGroup.Item>\r\n                       <h2>Order Summary</h2>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>Items</Col>\r\n                           <Col>${order.itemsPrice}</Col>\r\n                       </Row>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>Shipping</Col>\r\n                           <Col>${order.shippingPrice}</Col>\r\n                       </Row>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>Tax</Col>\r\n                           <Col>${order.taxPrice}</Col>\r\n                       </Row>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>Total</Col>\r\n                           <Col>${order.totalPrice}</Col>\r\n                       </Row>\r\n                   </ListGroup.Item>\r\n                   {!order.isPaid && (\r\n                      <ListGroup.Item>\r\n                        {loadingPay && <Loader></Loader>}\r\n                        {!sdkReady ? <Loader></Loader>:(\r\n                            <PayPalButton\r\n                             amount ={order.totalPrice}\r\n                             onSuccess={successPaymentHandler} \r\n                            />\r\n                        )} \r\n                      </ListGroup.Item>\r\n                   )} \r\n\r\n                   {loadingDeliver && <Loader></Loader>} \r\n\r\n                   {userInfo && userInfo.isAdmin && order.isPaid &&!order.isDelivered &&(\r\n                       <ListGroupItem>\r\n                           <Button\r\n                            type='button'\r\n                            className='btn btn-block'\r\n                            onClick={orderDeliverHandler}\r\n                           >\r\n                               Mark As Delivered\r\n                           </Button>\r\n                       </ListGroupItem>\r\n                   )} \r\n\r\n              </ListGroup>\r\n          </Card>\r\n      </Col>\r\n\r\n    </Row>   \r\n   </>  \r\n        \r\n    ) \r\n            \r\n}\r\n\r\nexport default OrderScreen ;","import React, { useEffect } from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport Loader from '../../../Loader/Loader'\r\nimport Message from '../../Message/Message'\r\nimport {deleteUser, listUsers} from '../../../actions/userActions'\r\nimport { Button, Table } from 'react-bootstrap';\r\nconst UserListScreen = () => {\r\n     const dispatch = useDispatch()\r\n\r\n     const history = useHistory()\r\n     \r\n      const userList = useSelector(state => state.userList)\r\n      const {loading,error,users} = userList\r\n\r\n      const userLogin = useSelector(state => state.userLogin)\r\n      const {userInfo} = userLogin\r\n\r\n      const userDelete = useSelector(state => state.userDelete)\r\n      const {success:successDelete} = userDelete\r\n      \r\n      useEffect(()=>{\r\n          if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n          }\r\n          else{\r\n              history.push('/login')\r\n          }\r\n          \r\n      },[dispatch,history,successDelete,userInfo])\r\n\r\n      const deleteHandler = (id) => {\r\n          if(window.confirm('Are You Sure')){\r\n            dispatch(deleteUser(id))\r\n          }\r\n          \r\n      }\r\n\r\n    return (\r\n        <>\r\n         <h1>Users</h1>\r\n         {loading ? <Loader></Loader>: error ? <Message variant='danger'>{error}</Message> :(\r\n             <Table striped bordered hover responsive className=\"table-sm\">\r\n                 <thead>\r\n                     <tr>\r\n                         <th>ID</th>\r\n                         <th>NAME</th> \r\n                         <th>EMAIL</th> \r\n                         <th>ADMIN</th>\r\n                         <th></th>  \r\n                     </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                     {users.map(user => (\r\n\r\n                         <tr key ={user._id}>\r\n\r\n                            <td>{user._id}</td>\r\n\r\n                             <td>{user.name}</td>\r\n\r\n                            <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n\r\n                            <td>{user.isAdmin ? \r\n                                 (\r\n                                  <i style={{color:'green'}} className=\"fas fa-check\"></i>   \r\n                                 ): (\r\n                                    <i className=\"fas fa-times\" \r\n                                    style={{color:'red'}}></i>       \r\n                                 )}\r\n                            </td>\r\n                            <td>\r\n                               <Link to={`/admin/user/${user._id}/edit`}>\r\n                                 <Button variant='light' className='btn-sm'>\r\n                                      <i className='fas fa-edit'></i>\r\n                                 </Button>\r\n                               </Link>\r\n                               <Button\r\n                                variant='danger'\r\n                                className='btn-sm'\r\n                                onClick ={ () => deleteHandler(user._id)}\r\n                               >\r\n                                  <i className=\"fas fa-trash\"></i>\r\n                                </Button> \r\n                            </td>\r\n\r\n                         </tr>\r\n                     ))}\r\n                 </tbody>\r\n\r\n             </Table>\r\n         ) }   \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserListScreen;","import React, { useEffect, useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport {Link, useHistory, useParams} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {getUserDetails, updateUser} from '../../../actions/userActions'\r\nimport FormContainer from '../../FormContainer/FormContainer';\r\nimport Message from '../../Message/Message';\r\nimport Loader from '../../../Loader/Loader';\r\nimport { USER_UPDATE_RESET } from '../../../constains/userConstains';\r\n\r\nconst UserEditScreen = () => {\r\n     const [name,setName] = useState('')\r\n     const [email,setEmail] = useState('')\r\n     \r\n     const [isAdmin,setIsAdmin] = useState(false)\r\n   \r\n     const {id} = useParams() \r\n     \r\n     const dispatch = useDispatch()\r\n\r\n     const userDetails = useSelector(state => state.userDetails )\r\n     const {loading,error,user} = userDetails\r\n\r\n     const userUpdate = useSelector(state => state.userUpdate )\r\n     const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = userUpdate\r\n\r\n     const history = useHistory()\r\n    \r\n       \r\n     useEffect(() =>{\r\n         if(successUpdate){\r\n             dispatch({type:USER_UPDATE_RESET})\r\n             history.push('/admin/userList')\r\n         }\r\n         else{\r\n            if(!user.name || user._id !== id){\r\n                dispatch(getUserDetails(id))\r\n            }\r\n            else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n         }\r\n        \r\n          \r\n     },[dispatch,user,id,successUpdate,history]) \r\n\r\n     const submitHandler = (e)=>{\r\n      \r\n       e.preventDefault()\r\n\r\n       dispatch(updateUser({_id:id,name,email,isAdmin}))\r\n     } \r\n\r\n    return (\r\n         <>\r\n         <Link to='/admin/userList' className='btn btn-light'>Go Back</Link>\r\n\r\n         <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader></Loader>}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader></Loader> :\r\n            error ? <Message variant=\"danger\">{error}</Message>:(\r\n                 \r\n                <Form onSubmit={submitHandler} >\r\n\r\n            <Form.Group controlId=\"name\">\r\n                   <Form.Label>Name:</Form.Label>\r\n                   <Form.Control type=\"text\" placeholder=\"Enter Name\"\r\n                   value={name}\r\n                   onChange={(e) =>setName(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"email\">\r\n                   <Form.Label>Email Address:</Form.Label>\r\n                   <Form.Control type=\"email\" placeholder=\"Enter Email\"\r\n                   value={email}\r\n                   onChange={(e) => setEmail(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n               <Form.Group controlId=\"isAdmin\">\r\n                   <Form.Check\r\n                    type=\"checkbox\"  \r\n                    label='Is Admin'\r\n                    checked={isAdmin}\r\n                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                   ></Form.Check>\r\n\r\n               </Form.Group>\r\n\r\n               <Button type=\"submit\" variant=\"primary\">\r\n                   Update\r\n               </Button>\r\n            </Form>\r\n            )}\r\n        </FormContainer>\r\n         </>\r\n        \r\n    );\r\n};\r\n\r\nexport default UserEditScreen;","import React, { useEffect } from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Link, useHistory, useParams} from 'react-router-dom'\r\nimport Loader from '../../../Loader/Loader'\r\nimport Message from '../../Message/Message'\r\nimport { listProducts, deleteProduct, createProduct} from '../../../actions/productActions'\r\nimport { Button, Col, Row, Table } from 'react-bootstrap';\r\nimport { PRODUCT_CREATE_RESET } from '../../../constains/productConstains';\r\nimport Paginate from '../../Paginate/Paginate';\r\nconst ProductListScreen = () => {\r\n     const dispatch = useDispatch()\r\n\r\n     const history = useHistory()\r\n\r\n     const {pageNumber} = useParams()\r\n     \r\n      const productList = useSelector(state => state.productList)\r\n      const {loading,error,products,pages,page} = productList\r\n\r\n      const productCreate = useSelector(state => state.productCreate)\r\n      const {loading:loadingCreate,error:errorCreate,success:successCreate, product:createdProduct} = productCreate\r\n\r\n\r\n      const productDelete = useSelector(state => state.productDelete)\r\n      const {loading:loadingDelete,error:errorDelete,success:successDelete} = productDelete\r\n\r\n      const userLogin = useSelector(state => state.userLogin)\r\n      const {userInfo} = userLogin\r\n      \r\n      useEffect(()=>{\r\n          dispatch({type:PRODUCT_CREATE_RESET})\r\n           \r\n          if( !userInfo.isAdmin){\r\n            history.push('/login')\r\n          }\r\n          if(successCreate){\r\n              history.push(`/admin/product/${createdProduct._id}/edit`)\r\n          }\r\n          else{\r\n              dispatch(listProducts('',pageNumber))\r\n          }\r\n          \r\n          \r\n      },[dispatch,history,userInfo,successDelete,successCreate,createdProduct,pageNumber])\r\n\r\n      const deleteHandler = (id) => {\r\n          if(window.confirm('Are You Sure')){\r\n           //Delete Products\r\n            dispatch(deleteProduct(id))\r\n          }\r\n          \r\n      }\r\n      const addProductHandler = () =>{\r\n         dispatch(createProduct())\r\n      }\r\n\r\n    return (\r\n        <>\r\n         <Row className='align-items-center'>\r\n             <Col>\r\n               <h1>Products</h1>\r\n             </Col>\r\n             <Col className='text-right'>\r\n                <Button className='my-3' onClick={addProductHandler}>\r\n                     <i className='fas fa-plus'></i> Create Product\r\n                </Button> \r\n             </Col>\r\n         </Row>\r\n         {loadingCreate && <Loader></Loader>}\r\n         {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n         {loadingDelete && <Loader></Loader>}\r\n         {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n         {loading ? <Loader></Loader>: error ? <Message variant='danger'>{error}</Message> :(\r\n             <Table striped bordered hover responsive className=\"table-sm\">\r\n                 <thead>\r\n                     <tr>\r\n                         <th>ID</th>\r\n                         <th>NAME</th> \r\n                         <th>PRICE</th> \r\n                         <th>CATEGORY</th>\r\n                         <th>BRAND</th>\r\n                         <th></th>  \r\n                     </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                     {products.map(product => (\r\n\r\n                         <tr key ={product._id}>\r\n\r\n                            <td>{product._id}</td>\r\n\r\n                             <td>{product.name}</td>\r\n\r\n                            <td>${product.price}</td>\r\n\r\n                            <td>\r\n                              {product.category}  \r\n                            </td>\r\n                            <td>\r\n                              {product.brand}  \r\n                            </td>\r\n                            <td>\r\n                               <Link to={`/admin/product/${product._id}/edit`}>\r\n                                 <Button variant='light' className='btn-sm'>\r\n                                      <i className='fas fa-edit'></i>\r\n                                 </Button>\r\n                               </Link>\r\n                               <Button\r\n                                variant='danger'\r\n                                className='btn-sm'\r\n                                onClick ={ () => deleteHandler(product._id)}\r\n                               >\r\n                                  <i className=\"fas fa-trash\"></i>\r\n                                </Button> \r\n                            </td>\r\n\r\n                         </tr>\r\n                     ))}\r\n                 </tbody>\r\n\r\n             </Table>\r\n         ) }\r\n         <Paginate pages={pages} page={page} isAdmin={true}></Paginate>    \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductListScreen;","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport {Link, useHistory, useParams} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport FormContainer from '../../FormContainer/FormContainer';\r\nimport Message from '../../Message/Message';\r\nimport Loader from '../../../Loader/Loader';\r\nimport { listProductDetails, updateProduct } from '../../../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../../../constains/productConstains';\r\n\r\n\r\nconst ProductEditScreen = () => {\r\n     const [name,setName] = useState('')\r\n     const [price,setPrice] = useState(0)\r\n     const [image,setImage] = useState('')\r\n     const [brand,setBrand] = useState('')\r\n     const [category,setCategory] = useState('')\r\n     const [countInStock,setCountInStock] = useState(0) \r\n     const [description,setDescription] = useState('')\r\n     const [uploading,setUploading] = useState(false)\r\n   \r\n     const {id} = useParams() \r\n     \r\n     const dispatch = useDispatch()\r\n\r\n     const productDetails = useSelector(state => state.productDetails )\r\n     const {loading,error,product} = productDetails\r\n\r\n     const productUpdate = useSelector(state => state.productUpdate )\r\n     const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = productUpdate\r\n\r\n\r\n     const history = useHistory()\r\n    \r\n       \r\n     useEffect(() =>{\r\n           if(successUpdate){\r\n               dispatch({type:PRODUCT_UPDATE_RESET})\r\n\r\n               history.push('/admin/productList')\r\n           }\r\n           else{\r\n              \r\n            if(!product.name || product._id !== id){\r\n                dispatch(listProductDetails(id))\r\n            }\r\n            else{\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setCategory(product.category)\r\n                setBrand(product.brand)\r\n                setImage(product.image)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n\r\n           }        \r\n     },[dispatch,product,id,successUpdate,history]) \r\n\r\n     const handleFileUpload = async(e) =>{\r\n     const file = e.target.files[0]\r\n    const formData = new FormData();\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n\r\n    }\r\n      \r\n     }\r\n\r\n     const submitHandler = (e)=>{\r\n      \r\n       e.preventDefault()\r\n\r\n       //Update Product\r\n       dispatch(updateProduct({\r\n           _id:id,\r\n           name,\r\n           price,\r\n           category,\r\n           brand,\r\n           countInStock,\r\n           description,\r\n           image\r\n\r\n       })\r\n       )\r\n     }\r\n     \r\n     \r\n\r\n    return (\r\n         <>\r\n         <Link to='/admin/productList' className='btn btn-light'>Go Back</Link>\r\n\r\n         <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader></Loader>}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader></Loader> :\r\n            error ? <Message variant=\"danger\">{error}</Message>:(\r\n                 \r\n                <Form onSubmit={submitHandler} >\r\n\r\n            <Form.Group controlId=\"name\">\r\n                   <Form.Label>Name:</Form.Label>\r\n                   <Form.Control type=\"text\" placeholder=\"Enter Name\"\r\n                   value={name}\r\n                   onChange={(e) =>setName(e.target.value)}\r\n                   ></Form.Control>\r\n\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"price\">\r\n                   <Form.Label>Price:</Form.Label>\r\n                   <Form.Control type=\"number\" placeholder=\"Enter Price\"\r\n                   value={price}\r\n                   onChange={(e) => setPrice(e.target.value)}\r\n                   ></Form.Control>\r\n               </Form.Group>\r\n               <Form.Group controlId=\"image-file\">\r\n               <Form.Label>Image:</Form.Label>\r\n               <Form.Control type=\"text\" placeholder=\"Enter Image Url\"\r\n                   value={image}\r\n                   onChange={(e) => setImage(e.target.value)}\r\n                   ></Form.Control>\r\n                  <Form.File\r\n                   type=\"file\"\r\n                   id='image-file'\r\n                   label='choose File'\r\n                   name='image'\r\n                   onChange={handleFileUpload}\r\n                  >\r\n                  </Form.File> \r\n                 {uploading && <Loader></Loader>}\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"category\">\r\n               <Form.Label>Category:</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter Category\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                    ></Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"brand\">\r\n                <Form.Label>Brand:</Form.Label>   \r\n                <Form.Control type=\"text\" placeholder=\"Enter Brand\"\r\n                    value={brand}\r\n                    onChange={(e) => setBrand(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"countInStock\">\r\n                <Form.Label>Count In Stock:</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"Enter Count InStock\"\r\n                    value={countInStock}\r\n                    onChange={(e) => setCountInStock(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"description\">\r\n                <Form.Label>Description:</Form.Label>  \r\n                <Form.Control type=\"text\" placeholder=\"Enter description\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n               <Button type=\"submit\" variant=\"primary\">\r\n                   Update\r\n               </Button>\r\n            </Form>\r\n            )}\r\n        </FormContainer>\r\n         </>\r\n        \r\n    );\r\n};\r\n\r\nexport default ProductEditScreen;","import React, { useEffect } from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport Loader from '../../../Loader/Loader'\r\nimport Message from '../../Message/Message'\r\nimport {listOrders} from '../../../actions/orderAction'\r\nimport { Button, Table } from 'react-bootstrap';\r\nconst OrderListScreen = () => {\r\n     const dispatch = useDispatch()\r\n\r\n     const history = useHistory()\r\n     \r\n      const orderList = useSelector(state => state.orderList)\r\n      const {loading,error,orders} = orderList\r\n\r\n      const userLogin = useSelector(state => state.userLogin)\r\n      const {userInfo} = userLogin\r\n\r\n      \r\n      useEffect(()=>{\r\n          if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n          }\r\n          else{\r\n              history.push('/login')\r\n          }\r\n          \r\n      },[dispatch,history,userInfo])\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n         <h1>Orders</h1>\r\n         {loading ? <Loader></Loader>: error ? <Message variant='danger'>{error}</Message> :(\r\n             <Table striped bordered hover responsive className=\"table-sm\">\r\n                 <thead>\r\n                     <tr>\r\n                         <th>ID</th>\r\n                         <th>USER</th> \r\n                         <th>DATE</th> \r\n                         <th>TOTAL</th>\r\n                         <th>PAID</th> \r\n                         <th>DELIVERED</th>  \r\n                         <th></th> \r\n                     </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                     {orders.map(order => (\r\n\r\n                         <tr key ={order._id}>\r\n\r\n                            <td>{order._id}</td>\r\n\r\n                             <td>{order.user && order.user.name}</td>\r\n\r\n                            <td>{order.createdAt.substring(0,10)}</td>\r\n\r\n                            <td>${order.totalPrice}</td>\r\n\r\n                            <td>{order.isPaid ? \r\n                                 (\r\n                                  order.paidAt.substring(0,10)\r\n                                 ): (\r\n                                    <i className=\"fas fa-times\" \r\n                                    style={{color:'red'}}></i>       \r\n                                 )}\r\n                            </td>\r\n                            <td>{order.isDelivered ? \r\n                                 (\r\n                                  order.deliveredAt.substring(0,10)\r\n                                 ): (\r\n                                    <i className=\"fas fa-times\" \r\n                                    style={{color:'red'}}></i>       \r\n                                 )}\r\n                            </td>\r\n                            <td>\r\n                               <Link to={`/order/${order._id}`}>\r\n                                 <Button variant='light' className='btn-sm'>\r\n                                     Details\r\n                                 </Button>\r\n                               </Link>\r\n                               \r\n                            </td>\r\n\r\n                         </tr>\r\n                     ))}\r\n                 </tbody>\r\n\r\n             </Table>\r\n         ) }   \r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderListScreen;","import React from 'react';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport {Container} from 'react-bootstrap';\nimport './index.css';\nimport Home from './components/screens/HomeScreen/Home';\nimport ProductScreen from './components/screens/ProsuctScreen/ProductScreen';\nimport CartScreen from './components/screens/CartScreen/CartScreen';\nimport LoginScreen from './components/screens/LoginScreen/LoginScreen';\nimport RegisterScreen from './components/screens/RegisterScreen/RegisterScreen';\nimport ProfileScreen from './components/screens/ProfileScreen/ProfileScreen';\nimport ShipingScreen from './components/screens/Shiping Screen/ShipingScreen';\nimport PaymentScreen from './components/screens/PaymentScreen/PaymentScreen';\nimport PlaceOrderScreen from './components/screens/PlaceOrderScreen/PlaceOrderScreen';\nimport OrderScreen from './components/screens/OrderScreen/OrderScreen';\nimport UserListScreen from './components/screens/UserListScreen/UserListScreen'\nimport UserEditScreen from './components/screens/UserEditScreen/UserEditScreen';\nimport ProductListScreen from './components/screens/ProductListScreen/ProductListScreen';\nimport ProductEditScreen from './components/screens/ProductEditScreen/ProductEditScreen';\nimport OrderListScreen from './components/screens/OrderListScreen/OrderListScreen';\n\nconst App = () => {\n  return (\n    <>\n    <Router>\n      <Header></Header>\n      <main className=\"py-3\">\n        <Container>\n          \n           <Switch>\n            <Route path=\"/\" exact>\n            <Home></Home>\n            </Route>\n            <Route path=\"/search/:keyword\" exact >\n            <Home></Home>\n            </Route>\n            <Route path=\"/search/:keyword/page/:pageNumber\" exact >\n            <Home></Home>\n            </Route>\n            <Route path=\"/page/:pageNumber\" exact >\n            <Home></Home>\n            </Route>\n            <Route  exact path=\"/product/:id\" >\n              <ProductScreen />\n            </Route>\n            <Route   path=\"/login\" >\n              <LoginScreen></LoginScreen>\n            </Route>\n            <Route   path=\"/profile\" >\n              <ProfileScreen></ProfileScreen>\n            </Route>\n            <Route   path=\"/register\" >\n              <RegisterScreen></RegisterScreen>\n            </Route>\n            <Route   path=\"/shipping\" >\n              <ShipingScreen></ShipingScreen>\n            </Route>\n            <Route   path=\"/payment\" >\n               <PaymentScreen></PaymentScreen>\n            </Route>\n            <Route   path=\"/placeOrder\" >\n               <PlaceOrderScreen></PlaceOrderScreen>\n            </Route>\n            <Route   path=\"/order/:id\" >\n               <OrderScreen></OrderScreen>\n            </Route>\n            <Route   path=\"/cart/:id?\" >\n              <CartScreen></CartScreen>\n            </Route>\n            <Route   path=\"/admin/userList\" >\n              <UserListScreen></UserListScreen>\n            </Route>\n            <Route   path=\"/admin/user/:id/edit\" >\n              <UserEditScreen></UserEditScreen>\n            </Route>\n            <Route   path=\"/admin/productList\" exact >\n              <ProductListScreen></ProductListScreen>\n            </Route>\n            <Route   path=\"/admin/productList/:pageNumber\" exact >\n              <ProductListScreen></ProductListScreen>\n            </Route>\n            <Route   path=\"/admin/orders\" >\n              <OrderListScreen></OrderListScreen>\n            </Route>\n            <Route   path=\"/admin/product/:id/edit\" >\n              <ProductEditScreen></ProductEditScreen>\n            </Route>\n             \n           </Switch>\n        \n        </Container>\n      </main>\n      <Footer></Footer>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store.js';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}